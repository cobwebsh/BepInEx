<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <Description>BepInEx Core library</Description>
        <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
        <AssemblyTitle>BepInEx</AssemblyTitle>
        <Product>BepInEx</Product>
        <LangVersion>10</LangVersion>
        <OutputPath>..\bin\Core\</OutputPath>
        <DocumentationFile>$(OutputPath)\$(TargetFramework)\BepInEx.Core.xml</DocumentationFile>
        <Description>Unity plugin injection framework</Description>
        <!-- Force nuget assembly output on netstandard2.1 -->
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
        <TargetFrameworks>net35;netstandard2.0;netstandard2.1</TargetFrameworks>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <DebugType>none</DebugType>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'">
        <DebugType>portable</DebugType>
    </PropertyGroup>
    <ItemGroup>
      <Compile Remove="NewFolder\**" />
      <EmbeddedResource Remove="NewFolder\**" />
      <None Remove="NewFolder\**" />
    </ItemGroup>
    <ItemGroup>
        <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.3" PrivateAssets="All" />
        <PackageReference Include="HarmonyX" Version="2.10.0" />
        <PackageReference Include="SemanticVersioning" Version="2.0.2" />
        <PackageReference Include="MonoMod.Utils" Version="22.5.1.1" />
    </ItemGroup>
    <ItemGroup>
        <Compile Remove="Contract\IPlugin.cs" />
    </ItemGroup>
    <ItemGroup>
      <Reference Include="MyScriptAssembly" Condition="'$(TargetFramework)' == 'net35'">
        <HintPath>..\ref\MyScriptAssembly.dll</HintPath>
      </Reference>
    </ItemGroup>
    <Import Project="..\BepInEx.Shared\BepInEx.Shared.projitems" Label="Shared" />

    <!-- CopyLocalLockFileAssemblies causes to also output shared assemblies: https://github.com/NuGet/Home/issues/4837#issuecomment-354536302 -->
    <!-- Since all core assemblies usually follow naming of System.*, we just delete them for now -->
    <!-- Also delete deps.json as they are not used by mono -->
    <Target Name="DeleteSys" AfterTargets="Build">
        <ItemGroup>
            <FilesToDelete Include="$(OutputPath)System.*.dll" />
            <FilesToDelete Include="$(OutputPath)*.deps.json" />
        </ItemGroup>
        <Delete Files="@(FilesToDelete)" />
    </Target>
</Project>
